[[_git_aliases]]
=== Псеўданімы Git

(((aliases)))
Перад тым як мы пачнем рухацца да наступнага раздзелу, хочацца прадэманстраваць тую асаблівасць, якая можа зрабіць ваш опыт карыстання Git больш простым, лёгкім ды зручным: псеўданімы.
Для удакладнення, нідзе ў гэтай кніжцы мы больш не будзем іх ужываць, але, калі вы збіраецеся рэгулярна карыстацца Git, псеўданімы гэта тое, што вам было б варта ведаць.

Git аўтаматычна не зразумеет вашую каманду, калі вы напішаце толькі яе частку.
Калі вы не хочаце пісаць цалкам назву кожнай каманды Git, вы наўпрост можаце прызначыць псеўданім да кожнай каманды ужыўшы `git config`.(((git commands, config)))
Вось некалькі прыкладаў, якія вы таксама можаце усталяваць:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Гэта значыць, што цяпер, напрыклад, замест таго каб пісаць `git commit`, вам дастаткова напісаць `git ci`.
Разам з тым як вы далей будзеце працягваць карыстацца Git, магчыма вы таксама будзеце ўжываць і іншыя каманды; не абмяжоўвайце сябе ад стварэння новых псеўданімаў.

Гэтая тэхніка таксама можа быць зручнай ў стварэнні каманд, якія на вашу думку павінны існаваць.
Напрыклад, дзеля таго каб выправіць нейкую карыстальніцкую праблему з якой вы сутыкнуліся робячы unstaging файла, вы можаце зрабіць ваш асаблівы `unstage` псеўданім у Git:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Гэта робіць наступныя дзьве каманды эквівалентнымі:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Так выглядае крыху ясней. 
Таксама, даволі часта робяць каманду `last` як паказана ніжэй:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Такім чынам вы з лёгкасцю можаце ўбачыць апошні зроблены commit:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    Test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Як бачыце, Git наўпрост замяняе нашую каманду на той псеўданім, які мы ёй прызначылі.
Аднак, верагодна вы захочаце запусціць знешнюю каманду замест падкаманды Git. 
У гэтым выпадку каманда пачынаецца з `!`. 
Гэта зручна, калі вы пішаце свае асаблівыя інструмэнты, працуючыя з Git рэпазіторыем.
Гэта можна прадэманстраваць прызначыўшы псеўданім `git visual` для запуску `gitk`:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
